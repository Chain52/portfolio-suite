import { Grid } from '@sudoku-backend/common/domain';
import { GridMock } from './types';

export default {
  positive: {
    noBlock: {
      /**
       * ┏━━━┯━━━┯━━━┓
       * ┃   │   │   ┃
       * ┠───┼───┼───┨
       * ┃   │   │ 1 ┃
       * ┠───┼───┼───┨
       * ┃   │ 1 │   ┃
       * ┗━━━┷━━━┷━━━┛
       */
      grid: () => Grid.from(',,,,,1,,1,'),
      expected: {
        type: 'number',
        coordinates: [0, 0],
        number: 1
      }
    },
    block: {
      /**
       * ┏━━━┯━━━┯━━━┳━━━┯━━━┯━━━┳━━━┯━━━┯━━━┓
       * ┃   │ 3 │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │ 4 │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃ 2 │ 1 │   ┃   │   │   ┃   │   │   ┃
       * ┣━━━┿━━━┿━━━╋━━━┿━━━┿━━━╋━━━┿━━━┿━━━┫
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │ 4 ┃   │   │   ┃   │   │   ┃
       * ┣━━━┿━━━┿━━━╋━━━┿━━━┿━━━╋━━━┿━━━┿━━━┫
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┗━━━┷━━━┷━━━┻━━━┷━━━┷━━━┻━━━┷━━━┷━━━┛
       */
      grid: () =>
        Grid.from(
          ',3,,,,,,,,' +
            ',,,,,,,4,,' +
            '2,1,,,,,,,,' +
            ',,,,,,,,,' +
            ',,,,,,,,,' +
            ',,4,,,,,,,' +
            ',,,,,,,,,' +
            ',,,,,,,,,' +
            ',,,,,,,,'
        ),
      expected: {
        type: 'number',
        coordinates: [0, 0],
        number: 4
      }
    },
    row: {
      /**
       * ┏━━━┯━━━┯━━━┳━━━┯━━━┯━━━┳━━━┯━━━┯━━━┓
       * ┃   │   │   ┃ 1 │ 2 │ 3 ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │ 4 │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┣━━━┿━━━┿━━━╋━━━┿━━━┿━━━╋━━━┿━━━┿━━━┫
       * ┃ 4 │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┣━━━┿━━━┿━━━╋━━━┿━━━┿━━━╋━━━┿━━━┿━━━┫
       * ┃   │ 4 │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┗━━━┷━━━┷━━━┻━━━┷━━━┷━━━┻━━━┷━━━┷━━━┛
       */
      grid: () =>
        Grid.from(
          ',,,1,2,3,,,,' +
            ',,,,,,,4,,' +
            ',,,,,,,,,' +
            '4,,,,,,,,,' +
            ',,,,,,,,,' +
            ',,,,,,,,,' +
            ',4,,,,,,,,' +
            ',,,,,,,,,' +
            ',,,,,,,,'
        ),
      expected: {
        type: 'number',
        coordinates: [2, 0],
        number: 4
      }
    },
    column: {
      /**
       * ┏━━━┯━━━┯━━━┳━━━┯━━━┯━━━┳━━━┯━━━┯━━━┓
       * ┃   │   │   ┃ 4 │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │ 4 │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃   │   │   ┃   │   │   ┃   │   │   ┃
       * ┣━━━┿━━━┿━━━╋━━━┿━━━┿━━━╋━━━┿━━━┿━━━┫
       * ┃ 1 │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃ 2 │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃ 3 │   │   ┃   │   │   ┃   │   │   ┃
       * ┣━━━┿━━━┿━━━╋━━━┿━━━┿━━━╋━━━┿━━━┿━━━┫
       * ┃ 5 │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃ 6 │   │   ┃   │   │   ┃   │   │   ┃
       * ┠───┼───┼───╂───┼───┼───╂───┼───┼───┨
       * ┃ 7 │   │   ┃   │   │   ┃   │   │   ┃
       * ┗━━━┷━━━┷━━━┻━━━┷━━━┷━━━┻━━━┷━━━┷━━━┛
       */
      grid: () =>
        Grid.from(
          ',,,4,,,,,,' +
            ',,,,,,,4,,' +
            ',,,,,,,,,' +
            '1,,,,,,,,,' +
            '2,,,,,,,,,' +
            '3,,,,,,,,,' +
            '5,,,,,,,,,' +
            '6,,,,,,,,,' +
            '7,,,,,,,,'
        ),
      expected: {
        type: 'number',
        coordinates: [0, 2],
        number: 4
      }
    }
  } satisfies Record<string, GridMock>,
  negative: {
    /**
     * ┏━━━┯━━━┳━━━┯━━━┓
     * ┃   │   ┃ 3 │ 4 ┃
     * ┠───┼───╂───┼───┨
     * ┃ 3 │ 4 ┃ 1 │ 2 ┃
     * ┣━━━┿━━━╋━━━┿━━━┫
     * ┃   │   ┃ 4 │   ┃
     * ┠───┼───╂───┼───┨
     * ┃ 4 │   ┃ 2 │   ┃
     * ┗━━━┷━━━┻━━━┷━━━┛
     */
    none: {
      grid: () => Grid.from(',,3,4,3,4,1,2,,,4,,4,,2,')
    }
  }
};
